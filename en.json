{
  "FADE": {
    "Actor": {
      "AT#": {
        "desc": "Number of attacks this round.",
        "name": "AT#"
      },
      "AT#Recv": {
        "descH": "Number of handheld attacks received this round.",
        "descM": "Number of monster/missile attacks received this round.",
        "nameH": "AT# recv. H",
        "nameM": "AT# recv. M"
      },
      "Abilities": {
        "cha": {
          "abbr": "CHA",
          "hint": "<b>Charisma (Cha) is the character's force of personality and presence.</b><p>It affects the way other characters, especially nonplayer characters controlled by the DM, react to the character.</p>",
          "key": "CH",
          "long": "Charisma",
          "mod": "Reactions",
          "retainer": "Retainers"
        },
        "con": {
          "abbr": "CON",
          "hint": "<b>Constitution (Con) is the character's physical health and vigor.</b><p>It affects the character's hit points score (i.e., his ability to survive being injured).</p>",
          "key": "CN",
          "long": "Constitution",
          "mod": "Hit Points/Level"
        },
        "dex": {
          "abbr": "DEX",
          "hint": "<b>Dexterity (Dex) is the character's nimbleness and grace.</b><p>It affects the character's ability to wield missile and thrown weapons (such as bows and throwing knives) and can make it harder for enemies to hit the character.</p>",
          "key": "DX",
          "long": "Dexterity",
          "mod": "Missile To-Hit, AC, Initiative"
        },
        "int": {
          "abbr": "INT",
          "hint": "<b>Intelligence (Int) is the character's mental might.</b><p>It affects the number of languages the character can learn.</p>",
          "key": "IN",
          "long": "Intelligence",
          "mod": "Language(s)"
        },
        "long": "Ability",
        "plural": "Abilities",
        "score": "Score",
        "str": {
          "abbr": "STR",
          "hint": "<b>Strength (Str) represents a character's physical power.</b><p>It influences the damage dealt with melee weapons like swords and clubs, as well as thrown weapons like spears and knives. It also impacts the character's accuracy when using hand-to-hand weapons and determines their capability for tasks like forcing open locked doors.</p</div>",
          "key": "ST",
          "long": "Strength",
          "mod": "To-Hit, Damage, Open Doors"
        },
        "wis": {
          "abbr": "WIS",
          "hint": "<b>Wisdom (Wis) is the character's understanding.</b><p>It affects the character's strength in understanding the world, the way things work, the forces of nature, and so forth, including their natural ability to resist magical spells.</p>",
          "key": "WS",
          "long": "Wisdom",
          "mod": "Saving Throws vs Spells"
        }
      },
      "AbilityCount": {
        "abbr": "SP#",
        "long": "Special Abilities",
        "short": "# Specials"
      },
      "Age": "Age",
      "Alignment": "Alignment",
      "Attacks": {
        "abbr": "AT#",
        "long": "Number of Attacks",
        "short": "# Attacks"
      },
      "Class": "Class",
      "Dead": {
        "desc": "Is this actor currently dead?",
        "name": "Dead"
      },
      "Deaths": {
        "desc": "<p>Number of times this character has dropped to zero or less hit points.</p><p>In some variants, this is capped at a value equal to the character's <b>constitution</b> score.</p>",
        "name": "Deaths"
      },
      "Deity": "Deity",
      "Experience": "Experience",
      "Eyes": "Eyes",
      "Flight": {
        "abbr": "FLY",
        "long": "Flight"
      },
      "Hair": "Hair",
      "Health": "Hit Points",
      "HealthMax": "Max HP.",
      "HealthMaxMonster": "Max HP. Set to zero to autocalculate max HP from hit dice.",
      "HealthShort": "HP",
      "Height": "Height",
      "HitDice": "Hit Dice",
      "HitDiceShort": "HD",
      "Languages": "Languages",
      "Level": "Level",
      "Max": "Max",
      "Min": "Min",
      "Movement": {
        "abbr": "MV",
        "day": "Overland",
        "dayHint": "<b>Miles per day. Overland travel.</b><p>Note that terrain effects this rate.</p>",
        "long": "Movement",
        "moveTurn": "Base Movement",
        "round": "Round",
        "roundHint": "<b>Feet or yards per 10 second round.</b><p>Used during combat encounters.</p>",
        "run": "Run",
        "runHint": "<b>Feet or yards per 10 second round.</b><p>Used when running or flying at maximum speed during combat encounters. Travel at maximum speed can last for up to 30 rounds (5 minutes) before exhaustion.</p>",
        "total": "Total",
        "turn": "Base",
        "turnHint": "<b>Feet or yards per 10 minute turn.</b><p>This rate includes many assumed actions such as mapping, peeking around corners, resting, and so forth.</p>"
      },
      "NextLevel": "Next Level",
      "NumberAppearing": {
        "abbr": "NA",
        "abbrLair": "NA lair",
        "long": "Number Appearing",
        "longLair": "Number Appearing in Lair",
        "short": "# Appearing"
      },
      "Origin": "Origin",
      "Other": "Other",
      "PrimeReq": "Prime Req.",
      "RetainerWage": "Wage",
      "Saves": {
        "long": "Saving Throws",
        "saveAs": {
          "abbr": "SA",
          "long": "Save As"
        },
        "short": "Save",
        "singular": "Saving Throw"
      },
      "Sex": "Sex",
      "Species": "Race",
      "THAC0": "THAC0",
      "THBonus": "To-Hit Bonus",
      "THBonusHint": "Used with ascending armor class (AAC) system, this value is added to attack rolls. Also called attack bonus. To-Hit Bonus is auto-calculated based on THAC0 value.",
      "Title": "Title",
      "Trainer": "Trainer",
      "Treasure": {
        "long": "Treasure Type",
        "short": "Treasure"
      },
      "Weight": "Weight",
      "Wrestling": {
        "abbr": "WR",
        "long": "Wrestling Rating",
        "short": "Wrestling"
      },
      "XPAward": "XP Award",
      "XPBonus": "XP Bonus %",
      "XPShort": "XP",
      "attackRank": "Attack Rank",
      "castAs": {
        "hint": "Some monsters can cast spells that are equivelent of a specific class and level. Specify as class key and level, similar to save as. Example: A monster that can cast spells as a 9th level Magic-User would have a castAs value of 'M9'.",
        "name": "Cast As"
      },
      "classAbilityAs": {
        "hint": "Some monsters have the class abilities of a specific class and level. Specify as class key and level, similar to save as. Example: A monster with 2nd level thief class abilities would have a class ability as of 'T2'.",
        "name": "Class Abl. As"
      },
      "enchanted": {
        "hint": "This enchanted creature can only be hit by magical weapons or spells.",
        "name": "Enchanted"
      },
      "encumbrance": {
        "encumbered": {
          "desc": "Significantly burdened, movement is sluggish.",
          "label": "Encumbered"
        },
        "heavily": {
          "desc": "Struggling under weight, movement is laborious.",
          "label": "Heavily Encumbered"
        },
        "lightly": {
          "desc": "Slightly burdened, movement is still easy.",
          "label": "Lightly Encumbered"
        },
        "moderately": {
          "desc": "Noticeable weight, movement is somewhat restricted. Half movement rate.",
          "label": "Moderately Encumbered"
        },
        "over": {
          "desc": "Severely overloaded, movement is impossible.",
          "label": "Over Encumbered"
        },
        "unencumbered": {
          "desc": "Free to move without any hindrance.",
          "label": "Unencumbered"
        }
      },
      "explore": {
        "FindTrap": {
          "abbr": "FT",
          "long": "Find a concealed medium to large trap or hazard.",
          "short": "Find Trap"
        },
        "ListenDoor": {
          "abbr": "LD",
          "long": "Hear a sound through a door or in the distance.",
          "short": "Listen Door"
        },
        "OpenDoor": {
          "abbr": "OD",
          "long": "Force open door or lift heavy object.",
          "short": "Open Door"
        },
        "SecretDoor": {
          "abbr": "SD",
          "long": "Detect a hidden door or compartment.",
          "short": "Secret Door"
        },
        "long": "Exploration"
      },
      "firstLevel": {
        "hint": "The lowest level for this class.",
        "name": "First Level"
      },
      "hdConBonus": {
        "hint": "Character's Constitution modifier is added to the hit die roll.",
        "name": "HD Con."
      },
      "isRetainer": {
        "hint": "Is this character a retainer, NPC, hireling or other hired hand.",
        "name": "Retainer"
      },
      "maxLevel": {
        "hint": "The highest level this class can attain.",
        "name": "Max Level"
      },
      "maxSpellLevel": {
        "hint": "The highest spell level for this class.",
        "name": "Max Spell Level"
      },
      "morale": "Morale",
      "moraleHint": "The morale score indicates a character's or monster's loyalty and courage.",
      "retainerMorale": "Retainer Morale",
      "retainerMoraleHint": "The morale score of this character's retainers. A retainer's morale score indicates their loyalty and courage under this character's leadership.",
      "sizes": {
        "G": "Huge",
        "GHint": "Creatures between 12 and under 25 feet tall, such as frost giants and rocs.",
        "I": "Immense",
        "IHint": "Creatures 25 feet tall or larger, such as dragons, titans, and colossal creatures.",
        "L": "Large",
        "LHint": "Creatures between 7 and under 12 feet tall, such as ogres, trolls, and large beasts. In standard combat mechanics, this size includes all larger sizes.",
        "M": "Medium",
        "MHint": "Creatures between 4 and under 7 feet tall, such as humans, elves, and orcs.",
        "S": "Small",
        "SHint": "Creatures between 2 and under 4 feet tall, such as kobolds and goblins. In standard combat mechanics, this size includes all smaller sizes.",
        "T": "Tiny",
        "THint": "Creatures less than 2 feet tall, such as pixies, sprites, and giant rats."
      }
    },
    "Armor": {
      "abbr": "AC",
      "abbrAAC": "AAC",
      "armorWeight": {
        "choices": {
          "heavy": "Heavy",
          "light": "Light"
        },
        "short": "Weight"
      },
      "hintBase": "<b>Base Armor Class</b><p>This is the base armor class and it doesn't' include modifiers from effects.</p>",
      "hintRangedAC": "<b>Ranged Armor Class</b><p>The effective armor class versus missile attacks.</p>",
      "hintTotal": "<b>Total Armor Class</b><p>This is the total armor class and it includes modifiers from effects.</p>",
      "long": "Base AC",
      "longAAC": "Base AAC",
      "mod": "AC Mod",
      "naked": "Without Armor",
      "natural": {
        "desc": "This is considered a natural part of its owner.",
        "short": "Natural"
      },
      "plural": "Armor",
      "rangedAAC": "Ranged AAC",
      "rangedAC": "Ranged AC",
      "shield": {
        "long": "Shield Equipped",
        "short": "Shield"
      },
      "total": "Total AC",
      "totalAAC": "Total AAC"
    },
    "AttackTypes": {
      "hint": "If specified, the spell cast will either trigger a to-hit roll or a saving throw roll prompt.",
      "name": "Attack Type",
      "types": {
        "breath": "Breath",
        "melee": "Melee",
        "missile": "Missile",
        "save": "Saving Throw"
      }
    },
    "Chat": {
      "apply": "Apply",
      "applyDamageDesc": "Apply damage to selected token or target.",
      "applyHealingDesc": "Apply healing to selected token or target.",
      "attackAC": "<div class='attack-info'>Attack hits <strong>{acAbbr} {hitAC}</strong>.</div>",
      "attackACAny": "<div class='attack-info'>Natural 20! Attack hits any AC!</strong>.</div>",
      "attackACNone": "<div class='attack-info'>Attack doesn't hit any AC.</div>",
      "attackFail": "<div class='attack-fail'>Attack missed!</div>",
      "attackFlavor": "{attacker} {attackType} attacks with {weapon}",
      "attackSuccess": "<div class='attack-success'>Attack hit!</div>",
      "combatTracker": {
        "begin": "Combat has begun!",
        "created": "Combat encounter created.",
        "ended": "Combat encounter has ended.",
        "initHeld": "Round {round} started. Initiative held for all combatants.",
        "initRerolled": "Round {round} started. Initiative rerolled for all combatants.",
        "initReset": "Round {round} started. Initiative rolls reset.",
        "initRoll": "{name} rolled {roll} {mod}.",
        "rollFormula": "Initiative Rolls (Base Formula: {formula})"
      },
      "damageFlavor2": "<div>{weapon} does <span class='damage'>{damage}</span> points of damage.</div>",
      "damageRoll": {
        "applied": "{damage} points of {type} damage applied to {tokenName}.",
        "killed": "<span class='attack-fail'>{tokenName} has fallen in battle.</span>",
        "mitigated": "{damage} points of {type} damage mitigated.",
        "name": "Damage",
        "restored": "{hp} hit points restored to {tokenName}.",
        "restoredLife": "<span class='attack-success'>{tokenName} has been restored to life.</span>"
      },
      "effectEnds": "<div>{effectName} on {actorName} ends.</div>",
      "fail": "Failed",
      "healFlavor": "<div>{weapon} restores <span class='damage'>{damage}</span> hit points.</div>",
      "healRoll": "Heal",
      "pass": "Success!",
      "resetSpells": "{actorName} reset memorized spells. Cast counts set to zero.",
      "rollMods": {
        "dexterityMod": "Dexterity mod: {mod}",
        "effectMod": "Attacker effect mod: {mod}",
        "manual": "Manual mod: {mod}",
        "masteryMod": "Mastery {primsec} mod: {mod}",
        "masteryPrimDmg": "Weapon mastery primary damage.",
        "masterySecDmg": "Weapon mastery secondary damage.",
        "strengthMod": "Strength mod: {mod}",
        "targetMod": "Target effect mod: {mod}",
        "unskilledUse": "Unskilled weapon use: {mod}",
        "weaponMod": "Weapon mod: {mod}"
      },
      "spellCast": "{caster} casts {spell}",
      "targetAC": "<span data-tooltip='Armor class for both melee and ranged, if their values are the same; otherwise, it represents the melee armor class only.' {cssClass}>{acTotal}</span>{targetRangedAc}",
      "targetACDefMastery": "<span data-tooltip='Armor class for melee attacks.' {cssClass}>{acTotal}</span>/<span {cssClassMastery} data-tooltip='<p>Adjusted armor class with weapon mastery ({masteryName}) bonus. Attacked {attAgainst}/{maxAttAgainst} times.</p>'>{defenseMasteryTotal}</span>{targetRangedAc}",
      "targetRangedAC": "/<span data-tooltip='Armor class for ranged attacks.' {cssClass}>{acTotal}</span>",
      "targets": "Targets",
      "useSpecAbility": "{owner} uses {specAbility}"
    },
    "DamageTypes": {
      "name": "Damage Type",
      "types": {
        "breath": "Breath",
        "fire": "Fire",
        "frost": "Frost",
        "heal": "Healing",
        "hull": "Hull",
        "magic": "Magic",
        "physical": "Physical",
        "poison": "Poison"
      }
    },
    "Effect": {
      "Inactive": "Inactive Effects",
      "Passive": "Passive Effects",
      "Source": "Source",
      "Temporary": "Temporary Effects",
      "Toggle": "Toggle Effect",
      "short": "Effect"
    },
    "GMNotes": "GM Notes",
    "Item": {
      "cost": {
        "abbr": "gp",
        "long": "Cost (gp)"
      },
      "equip": "Equip",
      "equipped": "Equipped",
      "isContainer": "Container",
      "isEquippable": "Equippable",
      "light": {
        "angle": "Angle",
        "animationIntensity": "Animation Intensity",
        "animationSpeed": "Animation Speed",
        "animationType": "Animation Type",
        "attenuation": "Attenuation",
        "bright": "Bright",
        "brightHint": "Bright is the radius of the central bright part of the light.",
        "color": "Color",
        "colorHint": "This is the color of the light as an HTML Color value. eg., #d0a750.",
        "disabled": "{actor}'s light source has been extinguished.",
        "durationHint": "How long the light source lasts before expiring.",
        "enabled": "{actor} has lit their {item}.",
        "fuelType": "Fuel Type",
        "isFuel": "Fuel",
        "isLight": "Light",
        "lightTypes": {
          "bullseye": "Bullseye",
          "candle": "Candle",
          "custom": "Custom",
          "lantern": "Lantern",
          "magic": "Magic",
          "torch": "Torch"
        },
        "luminosity": "Luminosity",
        "noFuel": "{actor} has no lighting fuel or items of the required type.",
        "noMoreItem": "{actor} has no more {item} to light.",
        "radius": "Radius",
        "radiusHint": "Radius is the radius of the dim part of the light.",
        "secondsRemaining": "Secs. Left",
        "secondsRemainingHint": "How many seconds this light will last.",
        "turnsRemaining": "Turns Left",
        "turnsRemainingHint": "How many turns this light will last.",
        "typeLabel": "Light Type"
      },
      "plural": "Gear",
      "quantity": {
        "abbr": "Qty",
        "abbr2": "#",
        "long": "Quantity",
        "maxAbbr": "Max Qty",
        "maxLong": "Max. Quantity"
      },
      "unequip": "Unequip",
      "uses": "Uses",
      "weight": {
        "abbr": "cn",
        "abbrPlural": "cns",
        "desc": "Encumbrance is the weight of an object measured in coin-weight.",
        "long": "Encumbrance (cn)",
        "long2": "Encumbrance",
        "short": "Enc (cn)",
        "short2": "Enc"
      }
    },
    "Mastery": {
      "acBonus": "AC Bonus",
      "acBonusAT": "AT#",
      "acBonusATTitle": "AC bonus attacks per round",
      "acBonusType": "AC Bonus Type",
      "acBonusTypeHint": "The type of attack that the AC bonus applies to.",
      "levels": {
        "basic": "Basic",
        "expert": "Expert",
        "grandMaster": "Grand Master",
        "master": "Master",
        "skilled": "Skilled"
      },
      "long": "Weapon Mastery",
      "plural": "Weapon Masteries",
      "primary": "Primary",
      "secondary": "Secondary",
      "short": "Mastery",
      "specialEffects": "Special Effects",
      "weaponType": "Weapon Type",
      "weaponTypeTitle": "M=Monster/Missile, H=Hand-held, A=All",
      "weaponTypes": {
        "all": {
          "abbr": "A",
          "long": "All"
        },
        "handheld": {
          "abbr": "H",
          "long": "Hand-held"
        },
        "monster": {
          "abbr": "M",
          "long": "Monster/Missile"
        }
      }
    },
    "SheetLabel": {
      "ActorMasteryItem": "Actor Mastery Item Sheet",
      "ArmorItem": "Armor Item Sheet",
      "Character": "Character Sheet (DD)",
      "Character2": "Character Sheet (Alternate)",
      "ClassItem": "Class Item Sheet",
      "Item": "Gear Item Sheet",
      "LightItem": "Light Item Sheet",
      "MasteryDefinitionItem": "Weapon Mastery Definition Item Sheet",
      "Monster": "Monster Sheet",
      "SkillItem": "Skill Item Sheet",
      "SpecialAbilityItem": "Special Ability Item Sheet",
      "SpellItem": "Spell Item Sheet",
      "WeaponItem": "Weapon Item Sheet"
    },
    "Size": "Size",
    "Skill": {
      "long": "General Skill",
      "plural": "General Skills",
      "short": "Skill"
    },
    "SpecialAbility": {
      "abilityMod": "Ability Mod",
      "autoFail": "Auto-Fail",
      "autoFailHint": "Automatically fails on a natural/unmodified roll of this value.",
      "autoSuccess": "Auto-Success",
      "autoSuccessHint": "Automatically succeeds on a natural/unmodified roll of this value.",
      "categories": {
        "class": "Class Ability",
        "explore": "Exploration",
        "save": "Saving Throw"
      },
      "long": "Special Ability",
      "plural": "Special Abilities",
      "saveType": "Save Type",
      "saveTypeHint": "Set this if this special ability is a saving throw.",
      "short": "Ability"
    },
    "Spell": {
      "AddLVL": "LVL {level}",
      "SpellLVL": "Spell Level {level}",
      "availableSlots": "Available slots",
      "cast": "Spell has been cast this many times",
      "casts": "casts",
      "duration": "Duration",
      "durationFormula": "Duration Roll",
      "durationFormulaHint": "The effect's duration in rounds. An infinity symbol indicates an infinite duration. A zero indicates an instantaneous effect with no duration.",
      "effect": "Effect",
      "healFormula": "Heal Roll",
      "level": "Level",
      "maxTargetFormula": "Max. Target Roll",
      "memorized": "Spell has been memorized this many times",
      "range": "Range",
      "resetSlots": "Reset memorized spells to zero casts. Memorized count will not be changed.",
      "slots": "Slots",
      "targetOther": "Target Other",
      "targetSelf": "Target Self",
      "usedSlots": "Used slots"
    },
    "Tags": {
      "addTags": "Add tags",
      "desc": "Some tags are used by the system and others are meant for GM or player usage."
    },
    "Weapon": {
      "ammo": {
        "load": "Load",
        "long": "Ammunition",
        "maxLoad": "Max Load",
        "short": "Ammo",
        "type": "Ammo Type",
        "typeHint": "The type of ammunition this item is. Leave blank is if this is not ammunition."
      },
      "damage": {
        "abbr": "Dmg",
        "long": "Damage Roll",
        "long2": "Two-Handed Damage Roll. Only if weapon can be used one-handed, otherwise use damage roll field.",
        "short": "Damage",
        "short2": "2-Hand Damage",
        "type": "Damage Type"
      },
      "grip": {
        "label": "Grip",
        "one": "1-Handed",
        "oneAbbr": "1H",
        "two": "2-Handed",
        "twoAbbr": "2H"
      },
      "mod": {
        "dmg": {
          "long": "Damage Modifier",
          "short": "Dmg+"
        },
        "dmgRanged": {
          "long": "Ranged Damage Modifier",
          "short": "Rng. Dmg+"
        },
        "toHit": {
          "long": "To-Hit Modifier",
          "short": "Hit+"
        },
        "toHitRanged": {
          "long": "Ranged To-Hit Modifier",
          "short": "Rng. Hit+"
        }
      },
      "plural": "Weapons",
      "range": {
        "long": "Long",
        "medium": "Medium",
        "section": "Ranges",
        "short": "Short"
      },
      "setVsCharge": {
        "desc": "Indicates if this weapon can be used to set vs. charge.",
        "label": "Set"
      }
    },
    "apps": {
      "playerCombat": {
        "prompt": "Select combat manuever for this round. Input will be disabled if character rolls initiative. This form will close automatically when combat is ended or user's combatant is removed from the combat tracker.",
        "title": "Player Combat"
      }
    },
    "bonus": "Bonus",
    "category": "Category",
    "class": {
      "key": {
        "hint": "The key used for single-letter references to a class. Example for a Fighter would be 'F'.",
        "name": "Key"
      }
    },
    "combat": {
      "maneuvers": {
        "attack": {
          "description": "Combatant makes a melee attack, adding Strength and magic bonuses to both the attack roll and damage.",
          "name": "Attack"
        },
        "disarm": {
          "description": "Combatant disarms an opponent by hitting without damage; if the target fails a Dexterity check, they drop their weapon.",
          "name": "Disarm"
        },
        "dodge": {
          "description": "When a fighter chooses this combat option, they do not attack at all and instead focus entirely on avoiding incoming attacks. Their AC increases by 5 against one specific attack they choose to evade. Against any other attack they are aware of, their AC increases by 3. Against any other attack they are not aware of, their AC increases by 1. This AC bonus lasts until the end of the round, and at the beginning of the next round, it is no longer in effect.",
          "name": "Dodge"
        },
        "fire": {
          "description": "Combatant uses a ranged weapon, such as a bow or breath weapon, provided the target is within the weapon’s range.",
          "name": "Fire/Shoot"
        },
        "guard": {
          "description": "The Guard maneuver allows a combatant to hold their melee attack until the end of an opponent's movement phase, striking if the opponent moves within range.",
          "name": "Guard"
        },
        "label": "Combat Manuever",
        "lance": {
          "description": "Combatant on charging mount performs a lance attack, gaining Strength and magic bonuses and dealing double damage if the mount charges at least 20 yards.",
          "name": "Lance Attack"
        },
        "magicItem": {
          "description": "Combatant activates a non-weapon magical item, such as a potion, wand, ring, or the passive ability of another magical item.",
          "name": "Magic Item"
        },
        "moveOnly": {
          "description": "Combatant is moving and not attacking this round. This is not a 'Retreat'.",
          "name": "Move Only"
        },
        "multiAttack": {
          "description": "Combatant makes multiple attacks per round, which can include any combination of attacks, throws, disarms, or lance attacks.",
          "name": "Multi-Attack"
        },
        "nothing": {
          "description": "Combatant does absolutely nothing this round. No move, no attack, no nothing.",
          "name": "Nothing"
        },
        "parry": {
          "description": "Combatant blocks incoming melee and thrown attacks for an entire round, causing all enemies to take a -4 penalty on their attack rolls against them.",
          "name": "Parry"
        },
        "readyWeapon": {
          "description": "Combatant is readying their weapon this round. They may also move at normal speed.",
          "name": "Ready Weapon"
        },
        "retreat": {
          "description": "Combatant flees from melee at more than half their speed, losing shield AC bonuses and giving enemies a +2 bonus to attack them in that round.",
          "name": "Retreat"
        },
        "setSpear": {
          "description": "Combatant braces a spear, pike, or similar weapon against a charging enemy, gaining Strength and magic bonuses and dealing double damage on a successful hit.",
          "name": "Set vs Charge"
        },
        "shove": {
          "description": "The Shove Maneuver allows a combatant to replace its attack to push a target back or aside, using size, strength, and momentum to determine success.",
          "name": "Shove"
        },
        "smash": {
          "description": "Combatant makes a powerful attack with a -5 penalty to the attack roll; if it hits, they add their full Strength score, along with Strength and magic bonuses, to the weapon's normal damage.",
          "name": "Smash"
        },
        "spell": {
          "description": "Combatant casts a memorized spell. Monsters use this action for magical attacks that aren't ranged or melee.",
          "name": "Cast Spell"
        },
        "throw": {
          "description": "Combatant throws a suitable weapon, applying Dexterity and magic bonuses to the attack roll and Strength and magic bonuses to damage, provided the target is within range.",
          "name": "Throw"
        },
        "unarmed": {
          "description": "Unarmed combat includes striking and wrestling. The defender does not have to engage in unarmed combat and may still attack with their melee weapon.",
          "name": "Unarmed Combat"
        },
        "withdrawal": {
          "description": "Combatant backs away from an enemy at 5 feet per round, attacking only if the enemy follows and moves into range during its movement phase.",
          "name": "Withdrawal"
        }
      },
      "phases": {
        "magic": {
          "description": "Characters casting spells or using magic items do so now.",
          "name": "Magic"
        },
        "melee": {
          "description": "Characters fighting hand-to-hand make their attacks.",
          "name": "Hand-to-Hand Combat"
        },
        "missile": {
          "description": " Characters using missile and thrown weapons make their attacks.",
          "name": "Missile Combat"
        },
        "morale": {
          "description": "Monsters, Retainers, Hirelings and NPCs roll Morale Checks. Anyone needing to make a saving throw vs. an ongoing effect does so now.",
          "name": "Morale Check"
        },
        "movement": {
          "description": "Characters who choose to move do so now.",
          "name": "Movement"
        },
        "special": {
          "description": "Special actions are resolved.",
          "name": "Special"
        }
      }
    },
    "cursed": "Cursed",
    "dialog": {
      "abilityCheck": "Ability Check",
      "applyToPrompt": "Apply to targeted or selected?",
      "attackMode": {
        "1hand": "One-Handed",
        "2hand": "Two-Handed",
        "name": "Attack Mode",
        "natural": "Natural"
      },
      "attackType": {
        "breath": "Breath",
        "melee": "Melee",
        "missile": "Missile"
      },
      "awardXP": {
        "awarded": "XP awarded successfully!",
        "long": "Award Experience Points",
        "share": "Share",
        "short": "Award XP",
        "xpAmount": "XP Amount",
        "xpAmountTotal": "Total XP Amount"
      },
      "close": "Close",
      "confirm": "Are you sure?",
      "confirmInitiativeRoll": "One or more combatants have <strong>Nothing</strong> as their declared action. Rolling the group's initiative will freeze the declared actions. Are you sure you want to proceed with rolling the group's initiative?",
      "extinguish": "Disable",
      "ignite": "Enable",
      "lightSource": "Light Source",
      "masteryTargetType": "Target Weapon Type",
      "no": "No, cancel",
      "noEquippedWeapons": "The selected actor does not have any weapons equipped.",
      "selectAttack": "Select What to Attack With",
      "selectLightSource": "Select Light Source",
      "selectSpell": "Select spell to cast",
      "selectWeapon": "Select Weapon",
      "selected": "Selected",
      "shove": {
        "attackerRoll": "{attacker} Roll",
        "defenderResist": "{defender} Resist",
        "resultsLabel": "Shove Results"
      },
      "skillCheck": "Skill Check",
      "spellcast": {
        "content": "Do you want to cast the spell or view its description?",
        "noLabel": "View Description",
        "title": "Cast Spell?",
        "yesLabel": "Cast Spell"
      },
      "targeted": "Targeted",
      "wrestling": {
        "attacker": "Attacker",
        "defender": "Defender",
        "groupWR": "Total Wrestling Rating",
        "stateLabel": "Current State",
        "states": {
          "attgrab": "Attacker Grabs",
          "attpin": "Attacker Pin",
          "atttakedown": "Attacker Takedown",
          "defgrab": "Defender Grabs",
          "defpin": "Defender Pin",
          "deftakedown": "Defender Takedown",
          "free": "Free"
        },
        "statusLabel": "Wrestler Status",
        "winsRound": "{winner} wins this round.",
        "wrestlingContest": "Wrestling Contest"
      },
      "yes": "Yes, go ahead"
    },
    "identified": "Identified",
    "modifier": "Modifier",
    "name": "Name",
    "none": "None",
    "notification": {
      "advancedTime": "<div>Time advances {turns} turn(s) {rounds} round(s).</div>",
      "missingItem": "The required item type ({type}) was not found or its quantity is zero.",
      "missingItem2": "{actor} does not have a {type}.",
      "needRest": "<div class='warning'>The party is tired and needs to rest.</div><div>Attack and damage rolls should have a -1 penatly until party rests.</div>",
      "noAmmo": "{actorName} does not have {weaponName} ammunition.",
      "noTokenWarning": "You must select a token or assign a default character to perform this action.",
      "noTokenWarning2": "You must select a token to perform this action.",
      "notMemorized": "{actorName} tries to cast {spellName}, but the spell is not memorized.",
      "partyRests": "The party rests.",
      "reversedTime": "<div>Time goes back {turns} turn(s) {rounds} round(s).</div>",
      "selectTarget": "A targetted must first be selected.",
      "selectToken1": "A token must first be selected.",
      "spellSelectToken": "You must have your token selected to cast a spell.",
      "timeReset1": "Resetting session turn count to zero.",
      "timeReset2": "Resetting global turn count to zero.",
      "zeroQuantity": "{itemName} has a quantity of zero and can't be used."
    },
    "operator": "Operator",
    "roll": "Roll",
    "rollMode": "Roll Mode",
    "rounds": "rounds",
    "shortName": "Short Name",
    "tabs": {
      "abilities": "Abilities",
      "attributes": "Attributes",
      "description": "Description",
      "effects": "Effects",
      "gmOnly": "GM Only",
      "items": "Equipment",
      "levels": "Levels",
      "primeRequisites": "Prime Requisites",
      "skills": "Skills",
      "spells": "Spells"
    },
    "target": "Target",
    "time": {
      "next": "Next",
      "nextDesc": "Advance Turn",
      "prev": "Previous",
      "prevDesc": "Revert Turn",
      "resetSession": "Reset Session",
      "resetTotal": "Reset Total",
      "rest": "Rest",
      "sessionCount": "Session Count",
      "sinceRest": "Since Rest",
      "totalCount": "Total Count"
    },
    "treasure": {
      "agate": "Agate",
      "amber": "Amber",
      "amethyst": "Amethyst",
      "aquamarine": "Aquamarine",
      "carbuncle": "Carbuncle",
      "coins": "Coins <i>({total} gp)</i>",
      "coral": "Coral",
      "cp": {
        "abbr": "cp",
        "plural": "copper pieces"
      },
      "crystal": "Crystal",
      "diamond": "Diamond",
      "emerald": "Emerald",
      "ep": {
        "abbr": "ep",
        "plural": "electrum pieces"
      },
      "formatValue": "{name} <i>({value} gp)</i>",
      "garnet": "Garnet",
      "gems": "Gems <i>({total} gp)</i>",
      "gp": {
        "abbr": "gp",
        "plural": "gold pieces"
      },
      "jacinth": "Jacinth",
      "jade": "Jade",
      "jasper": "Jasper",
      "jewelry": "Jewelry <i>({total} gp)</i>",
      "magic": "Items, Potions & Scrolls",
      "onyx": "Onyx",
      "opal": "Opal",
      "pearl": "Pearl",
      "pp": {
        "abbr": "pp",
        "plural": "platinum pieces"
      },
      "quartz": "Quartz",
      "ruby": "Ruby",
      "sapphire": "Sapphire",
      "sp": {
        "abbr": "sp",
        "plural": "silver pieces"
      },
      "special": "Special <i>({total} gp)</i>",
      "starstone": "Starstone",
      "topaz": "Topaz",
      "tristal": "Tristal",
      "turquoise": "Turquoise"
    },
    "turns": "turns",
    "unidentified": "Unidentified",
    "vsMagic": "vs Magic"
  },
  "FADE_TRANSLATIONS": {
    "classSpecies": {
      "Dwarf": "Dwarf",
      "Elf": "Elf",
      "Halfling": "Halfling",
      "Human": "Human"
    },
    "monsterAlignment": {
      "Any": "Any",
      "Chaotic": "Chaotic",
      "Chaotic or Neutral": "Chaotic or Neutral",
      "Lawful": "Lawful",
      "Lawful or Neutral": "Lawful or Neutral",
      "Neutral": "Neutral",
      "None": "None"
    },
    "monsterSize": {
      "G": "G",
      "I": "I",
      "L": "L",
      "M": "M",
      "S": "S"
    },
    "spellDuration": {
      "Concentration": "Concentration",
      "Instantaneous": "Instantaneous",
      "Permanent": "Permanent"
    },
    "spellRange": {
      "Personal": "Personal",
      "Touch": "Touch"
    }
  },
  "SETTINGS": {
    "EncMax": {
      "Hint": "The maximum amount a character may carry, in coins, and still be able to move.",
      "Hint2": "The maximum amount, in coins, that can be carried while still able to move.",
      "Name": "Encumbrance Max"
    },
    "Encumbrance": {
      "Basic": "Armor Only",
      "Classic": "Classic",
      "Expert": "Dark Dungeons",
      "Hint": "Enable automatic tracking of encumbrance and the application of status effects for characters carrying too much. Armor Only determines movement based on armor weight. Dark Dungeons assumes a max load of 2400 coins and five movement rates. Classic assumes a max load of 1600 coins and four movement rates.",
      "Name": "Encumbrance Tracking",
      "None": "None"
    },
    "Theme": {
      "Dark": "Dark Mode",
      "Hint": "Dark mode features a dark backround with light text and light mode features a light background with dark text.",
      "Light": "Light Mode",
      "Name": "Theme"
    },
    "collapseState": {
      "hint": "When enabled, the item lists will remember their collapse state individually for each character.",
      "name": "Remember Collapse State"
    },
    "declaredActions": {
      "hint": "Enable declared actions for encounters.",
      "name": "Declared Actions"
    },
    "display": {
      "abilities": {
        "hint": "Use abbreviations for character sheet abilities score labels.",
        "name": "Abreviated ability names."
      },
      "saves": {
        "hint": "Use short names for saving throws on the character sheet.",
        "name": "Short saving throw names."
      }
    },
    "initiative": {
      "formula": {
        "hint": "Define the formula used to calculate initiative. ",
        "name": "Initiative Formula"
      },
      "mode": {
        "choices": {
          "group": "Group (combat checklist)",
          "groupHybrid": "Group (hybrid individual)",
          "individual": "Individual",
          "individualChecklist": "Individual (combat checklist)",
          "simpleIndividual": "Individual (simplified)"
        },
        "hint": "Choose between group-based or individual-based initiative. Individual (simplified) mode orders solely by initiative roll plus any modifiers. Individual mode adds the 2-handed weapon rule, making 2-handed weapon users lose initiative. Individual (combat checklist) mode combines individual initiative with the combat checklist order when declared actions are enabled. Group (combat checklist) mode groups combatants by token disposition and also sorts within a group by the declared action, if declared actions are enabled. Group (hybrid individual) mode is like the group mode, but adds 2-handed weapon rule within a group's inner sort.",
        "name": "Initiative Mode"
      },
      "modifier": {
        "choices": {
          "average": "Average Dexterity",
          "highest": "Highest Dexterity",
          "none": "No Modifier"
        },
        "hint": "Choose how to calculate the group initiative modifier.",
        "name": "Group Initiative Modifier"
      },
      "nextRound": {
        "choices": {
          "hold": "Hold Initiative",
          "reroll": "Reroll Initiative",
          "reset": "Reset Initiative"
        },
        "hint": "Decide what will occur when the next round is activated in the combat tracker..",
        "name": "Initiative Next Round Mode"
      }
    },
    "logChanges": {
      "hint": "If enabled, logs character sheet changes to the GM via chat.",
      "name": "Log Character Sheet Changes"
    },
    "move": {
      "max": {
        "hint": "<b>Max ground speed per turn.</b><p>Movement distances are measured in feet when indoors and in yards when outdoors.</p>",
        "name": "Max. Move Speed"
      },
      "maxFlight": {
        "hint": "<b>Max flying speed per turn.</b><p>Movement distances are measured in feet when indoors and in yards when outdoors.</p>",
        "name": "Max. Flight Speed"
      }
    },
    "rest": {
      "hint": "Configure how often a party must rest while exploring. A value of 6 would mean the party must rest once every six turns. Set to 0 for no resting required.",
      "name": "Rest Turns"
    },
    "toHitSystem": {
      "choices": {
        "aac": "AAC and Attack Bonus",
        "classic": "Classic",
        "darkdungeons": "Dark Dungeons",
        "heroic": "Heroic Combat Matrix",
        "thac0": "THAC0 Only (no attack matrix)"
      },
      "hint": "The to-hit system determines how attack rolls are handled and also what armor class system is used (AC vs AAC). THAC0 Only system does not use an attack matrix, but instead a simple calculation of the THAC0 value minus the target's AC. Classic system makes use of an attack matrix and THAC0 supporting up to level 25 and AC ranged from -19 to 19. Classic treats natural 1s as fails and 20s as hits, regardless of modifiers AC. Heroic Combat Matrix harkens back to RPGS of the 90s and scales up to level 36 and AC ranged from -99 to 19. Dark Dungeons uses the system from the Dark Dungeons game. AAC and Attack Bonus is similar to THAC0, but features ascending armor class where the higher the AC value, the greater the defensive capability.",
      "name": "To-Hit System (Work-in-progress)"
    },
    "toasts": {
      "hint": "Display toasts on die rolls.",
      "name": "Die Roll Toasts"
    },
    "weaponMastery": {
      "hint": "If enabled, weapon mastery rules will be used.",
      "name": "Weapon Mastery"
    }
  },
  "TYPES": {
    "Actor": {
      "character": "Character",
      "monster": "Monster"
    },
    "Item": {
      "armor": "Armor",
      "class": "Character Class",
      "item": "Item",
      "light": "Light",
      "mastery": "Actor Weapon Mastery",
      "skill": "General Skill",
      "specialAbility": "Special Ability",
      "spell": "Spell",
      "treasure": "Treasure",
      "weapon": "Weapon",
      "weaponMastery": "Weapon Mastery Definition"
    }
  }
}